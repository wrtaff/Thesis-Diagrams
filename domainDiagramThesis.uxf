<?xml version="1.0" encoding="UTF-8" standalone="no"?><umlet_diagram><help_text>ET// Uncomment the following line to change the fontsize:
// fontsize=14


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on UML elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use Â± or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text><zoom_level>7</zoom_level><element><type>com.umlet.element.base.Class</type><coordinates><x>448</x><y>476</y><w>203</w><h>266</h></coordinates><panel_attributes>
:ClientCommunicator
 
--
 
ccSocket : Socket
outPrintStream: PrintStream
db : ClientDatabase
keyname : String
 
--
 
-ccListenerStarter: void
+terminateSession: void
+sendMessage2Client(String):void
+getKeyname(): String
+setKeyname(String): void
 
--
 
Responsibilities
-- Estab/Maintain comms
  with RemoteClients
-- Handles downlink comms btw 
   CommandServer and Clients</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>315</x><y>175</y><w>154</w><h>196</h></coordinates><panel_attributes>
:CandCserver
 
--


NO ATTRIBUTES


--
NO METHODS

--
Responsibilities
-- Top Level Class
-- Initializes UI and dbase.
-- The Listener Socket for
 the server. Runs as a 
separate thread; started 
by the server, and sits 
and waits for connections. 
Once connection is made, 
spawns ClientCommunicator
and passes socket to it.
</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>602</x><y>154</y><w>308</w><h>231</h></coordinates><panel_attributes>
:ClientDatabase
 
--
 
+dbase: SortedMap&lt;java.lang.String,ClientRecord&gt;
 

--
 
+createRecord(String hostID, String exerciseID): Bool
+deleteRecord(String hostID): Bool
-getRecord(String hostID)
+printRecords(String hostID)
+halt__module() ####(not yet incorporated)
+run_module()

 
--
 
Responsibilities
The database of ClientRecords. 
Uses a TreeMap (for now) as the data structure,
 and ClientRecords as the nodes.   Also 
holds the functions that control the bot, 
typically called from the UI.  </panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>700</x><y>455</y><w>196</w><h>259</h></coordinates><panel_attributes>
:ClientRecord
 
--
 
-uid_Host: String (#key#)
-ccProcess: ClientCommunicator
-uid_ExerciseNetwork: String
-status: String
-inbox: String
--
getClientInbox():String

getClientStatus():String

getUID_ExerciseNetwork():String

getUID_Host():String

setClientInbox(String message):

setClientStatus(String message)

setExerciseNetwork(String message)
 
--
Responsibilities
ClientRecord - the records in the database. 
Includes all fields associated with a single 
client, except for it's uid, which the record 
is keyed by in the database. </panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>735</x><y>371</y><w>76</w><h>97</h></coordinates><panel_attributes>lt=-
m1= 1
m2= n
has_a&gt;</panel_attributes><additional_attributes>14;14;14;42;63;42;63;84</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>455</x><y>217</y><w>160</w><h>48</h></coordinates><panel_attributes>lt=-
m1= 1
m2= 1
spawns_a&gt;</panel_attributes><additional_attributes>14;35;147;14</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>35</x><y>168</y><w>147</w><h>161</h></coordinates><panel_attributes>
:CandCserverGUI
 
--
 
- db : ClientDatabase
 
--
 
+NO METHODS YET
 
--
 
Responsibilities
-- TEMPORARY console
inteface for program</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>322</x><y>791</y><w>147</w><h>161</h></coordinates><panel_attributes>
:RemoteClient
 
--

what attributes?
 



--
+getStatus(): String
 

--
Responsibilities
-- Rides on remote host
-- Executes Remote cmds
-- Asks for periodic</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Note</type><coordinates><x>497</x><y>798</y><w>98</w><h>70</h></coordinates><panel_attributes>_Messages Down_
GETNAME
CHECK_INBOX
INBOX=XXXX



</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>392</x><y>728</y><w>314</w><h>76</h></coordinates><panel_attributes>lt=-
m1= 1
m2= 1
&lt; has_TCP_downlink_to                                                  
</panel_attributes><additional_attributes>175;14;175;14;175;35;14;35;14;63</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>168</x><y>189</y><w>160</w><h>50</h></coordinates><panel_attributes>-
m1= 1
m2= 1
&lt;spawns_a</panel_attributes><additional_attributes>147;21;14;21</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>371</x><y>364</y><w>188</w><h>125</h></coordinates><panel_attributes>lt=-
m1= 1
m2= n
spawns/passes client socket to&gt;</panel_attributes><additional_attributes>14;7;14;42;175;42;175;112</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>91</x><y>98</y><w>692</w><h>83</h></coordinates><panel_attributes>lt=-
m1= 1
m2= 1
interfaces_with&gt;</panel_attributes><additional_attributes>14;70;14;21;679;21;679;56</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>154</x><y>511</y><w>196</w><h>196</h></coordinates><panel_attributes>
:ClientCommunicatorListener
 
--
 
inStream: PrintStream
inBufferedReader : BufferedReader
parentCC : ClientCommunicator
db : ClientDatabase
  
--
 
 
--
 
Responsibilities
-- Handles uplink from Clients to
   CommandServer</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>245</x><y>693</y><w>125</w><h>111</h></coordinates><panel_attributes>lt=-
m1= 1
m2= 1
&lt;has_TCP_uplink_to
</panel_attributes><additional_attributes>14;14;14;56;112;56;112;98</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>343</x><y>595</y><w>118</w><h>50</h></coordinates><panel_attributes>-
m1= 1
m2= 1
&lt;spawns_a</panel_attributes><additional_attributes>105;21;7;21</additional_attributes></element><element><type>com.umlet.element.base.Note</type><coordinates><x>175</x><y>798</y><w>98</w><h>70</h></coordinates><panel_attributes>_Messages Up_
STATUS=XXXX
NAME=XXXX
EX_ID=XXXX
GET_INBOX
QUIT

</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Note</type><coordinates><x>0</x><y>0</y><w>98</w><h>49</h></coordinates><panel_attributes>UI commands
PRINT:ALL
</panel_attributes><additional_attributes/></element></umlet_diagram>